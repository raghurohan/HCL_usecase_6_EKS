name: Terraform Deploy 

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'

jobs:
  VPC:
    runs-on: ubuntu-latest
    name: "VPC - Apply"
    defaults:
      run:
        working-directory: ./vpc/
    
#When using aws-actions/configure-aws-credentials with OIDC, you must give 
#the job permission to request an OIDC ID token from GitHub

    permissions: #OIDC IAM Related
      id-token: write   # required for requesting OIDC token
      contents: read    # required for actions/checkout

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials from role
      uses: aws-actions/configure-aws-credentials@v4
      with:
          role-to-assume: arn:aws:iam::180294178330:role/github_trust_role
          role-session-name: github-actions
          aws-region: us-east-1

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.0

    - name: Terraform Format
      run: terraform fmt -recursive
    
    - name: Install TFLint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

    - name: Run TFLint and Save Output
      run: |
        tflint --format json > tflint-output.json || true
        tflint --format text > tflint-output.txt || true

    - name: Upload TFLint Output as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: tflint-report
        path: |
          ./vpc/tflint-output.json
          ./vpc/tflint-output.txt


    - name: Install Checkov
      run: pip install checkov

    - name: Run Checkov Scan and Save Report
      run: |
        checkov -d . --output json > checkov-report.json || true

    - name: Upload Checkov Report as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: checkov-report
        path: ./vpc/checkov-report.json


    - name: Terraform Init
      run: terraform init -upgrade

    - name: Terraform Validate
      run: terraform validate 

    - name: Terraform Plan
      run: terraform plan -out=tfplan


    - name: Terraform Apply (extra debug info)
      if: github.ref == 'refs/heads/main'
      run: |
        terraform apply -auto-approve
#####################################################################
  SG:
    runs-on: ubuntu-latest
    name: "SG- Apply"
    needs: VPC # Wait for the VPC job to complete
    defaults:
      run:
        working-directory: ./sg/
    
#When using aws-actions/configure-aws-credentials with OIDC, you must give 
#the job permission to request an OIDC ID token from GitHub

    permissions: #OIDC IAM Related
      id-token: write   # required for requesting OIDC token
      contents: read    # required for actions/checkout

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials from role
      uses: aws-actions/configure-aws-credentials@v4
      with:
          role-to-assume: arn:aws:iam::180294178330:role/github_trust_role
          role-session-name: github-actions
          aws-region: us-east-1

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.0

    - name: Terraform Format
      run: terraform fmt -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate 

    - name: Terraform Plan
      run: terraform plan -out=tfplan


    - name: Terraform Apply (extra debug info)
      if: github.ref == 'refs/heads/main'
      run: |
        terraform apply -auto-approve

#######################################################################
  EKS:
    runs-on: ubuntu-latest
    name: "eks - Apply"
    needs: SG # Wait for the VPC job to complete
    defaults:
      run:
        working-directory: ./eks/
    
#When using aws-actions/configure-aws-credentials with OIDC, you must give 
#the job permission to request an OIDC ID token from GitHub

    permissions: #OIDC IAM Related
      id-token: write   # required for requesting OIDC token
      contents: read    # required for actions/checkout

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials from role
      uses: aws-actions/configure-aws-credentials@v4
      with:
          role-to-assume: arn:aws:iam::180294178330:role/github_trust_role
          role-session-name: github-actions
          aws-region: us-east-1

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.0

    - name: Terraform Format
      run: terraform fmt -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate 

    - name: Terraform Plan
      run: terraform plan -out=tfplan


    - name: Terraform Apply (extra debug info)
      if: github.ref == 'refs/heads/main'
      run: |
        terraform apply -auto-approve
      
  ALB:
    runs-on: ubuntu-latest
    name: "ALB - Apply"
    needs: EKS # Wait for the EKS job to complete
    defaults:
      run:
        working-directory: ./alb/
    
#When using aws-actions/configure-aws-credentials with OIDC, you must give 
#the job permission to request an OIDC ID token from GitHub

    permissions: #OIDC IAM Related
      id-token: write   # required for requesting OIDC token
      contents: read    # required for actions/checkout

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials from role
      uses: aws-actions/configure-aws-credentials@v4
      with:
          role-to-assume: arn:aws:iam::180294178330:role/github_trust_role
          role-session-name: github-actions
          aws-region: us-east-1

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.10.0

    - name: Terraform Format
      run: terraform fmt -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate 

    - name: Terraform Plan
      run: terraform plan -out=tfplan


    - name: Terraform Apply (extra debug info)
      if: github.ref == 'refs/heads/main'
      run: |
        terraform apply -auto-approve
        

